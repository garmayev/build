<?php

namespace app\controllers;

use app\models\forms\LoginForm;
use app\models\forms\UserRegisterForm;
use app\models\search\UserSearch;
use app\models\User;
use yii\web\Controller;
use yii\web\Response;
use yii\widgets\ActiveForm;

class UserController extends BaseController
{
    public function beforeAction($action)
    {
        if ($action->id == 'logout') {
            $this->enableCsrfValidation = false;
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    public function actionValidateRegister()
    {
        $model = new UserRegisterForm();

        if (\Yii::$app->request->isAjax && $model->load(\Yii::$app->request->post())) {
            \Yii::$app->response->format = Response::FORMAT_JSON;
            return ActiveForm::validate($model);
        }
    }

    public function actionIndex()
    {
        $searchModel = new UserSearch();
        $dataProvider = $searchModel->search(\Yii::$app->request->queryParams);
        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    public function actionLogin()
    {
        $this->layout = 'blank';
        $model = new LoginForm();

        if ($this->request->isPost) {
            if ($model->load($this->request->post()) && $model->login()) {
                return $this->goHome();
            }
        }

        return $this->render('login', [
            'model' => $model,
        ]);
    }

    public function actionLogout()
    {
        \Yii::$app->user->logout();
        return $this->redirect(['/user/login']);
    }

    public function actionSetStatus($id, $status)
    {
        \Yii::$app->response->format = Response::FORMAT_JSON;
        $model = User::findOne($id);
        $model->status = $status;
        if ($model->save()) {
            return $model;
        }
        return [];
    }

    public function actionSetRole($id, $role)
    {
        $auth = \Yii::$app->authManager;
        $role = $auth->getRole($role);
        $model = User::findOne($id);
        $auth->revokeAll($model->id);
        $auth->assign($role, $model->id);
        \Yii::$app->response->format = Response::FORMAT_JSON;
        return $model;
    }
}
